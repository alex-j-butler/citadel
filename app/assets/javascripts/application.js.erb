// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or any plugin's vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require turbolinks
//= require jquery
//= require jquery_ujs
//= require bootstrap-sprockets
//= require moment
//= require bootstrap-datetimepicker
//= require cocoon
//= require markdown.converter
//= require markdown.editor
//= require markdown.extra
//= require leagues
//= require pagedown
//= require admin_bar

$(document).on('turbolinks:load', function() {
    // Disable disabled links
    $('a[disabled=disabled]').click(function(event) {
        event.preventDefault();
    });

    // Enable all tooltips
    $("[data-toggle='tooltip']").tooltip();

    // Tab toggling for select tags
    $("select[data-toggle='tab']").on('change', function(e) {
        var self = $(this);
        var target_id = self.val();

        self.find("option").each(function(index, option) {
            var id = option.value;

            if (id === target_id) {
                $("#" + id).addClass("active");
            } else {
                $("#" + option.value).removeClass('active');
            }
        });
    });

    // Most browsers keep form data around, so we need to trigger change on load
    $("select[data-toggle='tab']").trigger('change', null);

    // Quoting for Forums and Comms
    $("*[data-quote-id]").click(function() {
        console.log('quote');

        var btn = $(this);
        var quote = btn.attr("data-quote-text");
        if (quote[quote.length - 1] != '\n') {
            quote += '\n';
        }

        var target = $("#" + btn.attr("data-quote-id"));
        var text = target.val();
        if (text[text.length - 1] != '\n' && text.length > 0) {
            text += '\n';
        }

        target.val(text + quote);
        target.focus();
    });

    $(".mkdown-previewer a.preview-tab").click(function() {
        var textarea = $(".mkdown-textarea[data-id=" + $(this).attr("data-id") + "]");
        var previewDiv = $(".mkdown-preview[data-id=" + $(this).attr("data-id") + "]");

        var test = $.ajax('/mkdown-preview', { method: 'post', data: { 'markdown': textarea.val() } });
        test.fail(function(response) {
            previewDiv.text("Unable to preview");
        });
        test.done(function(response) {
            previewDiv.html(response.html);
        });
    });
});

$(function() {
    // Start periodic checks for notifications
    function updateNotifications() {
        var url = "/notifications"
        $.ajax(url);
    }
    setInterval(updateNotifications, 20000);
});
